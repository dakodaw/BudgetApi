// <auto-generated />
using System;
using BudgetApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Budget.DB.Migrations
{
    [DbContext(typeof(BudgetEntities))]
    [Migration("20240801202808_DontUseUserTableForMapping")]
    partial class DontUseUserTableForMapping
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Budget.DB.BudgetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(p,2)");

                    b.Property<int>("BudgetTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BudgetingGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BudgetTypeId");

                    b.HasIndex("BudgetingGroupId");

                    b.ToTable("Budget", (string)null);
                });

            modelBuilder.Entity("Budget.DB.BudgetTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BudgetType1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BudgetType");

                    b.HasKey("Id");

                    b.ToTable("BudgetType", (string)null);
                });

            modelBuilder.Entity("Budget.DB.BudgetingGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BudgetingGroup", (string)null);
                });

            modelBuilder.Entity("Budget.DB.CustomSettingsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings", (string)null);
                });

            modelBuilder.Entity("Budget.DB.GiftCardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InitialAmount")
                        .HasColumnType("decimal(p,2)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GiftCard", (string)null);
                });

            modelBuilder.Entity("Budget.DB.IncomeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(p,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReimbursement")
                        .HasColumnType("bit");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<string>("SourceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("SourceId");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Income", (string)null);
                });

            modelBuilder.Entity("Budget.DB.IncomeSourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveJob")
                        .HasColumnType("bit");

                    b.Property<decimal?>("EstimatedIncome")
                        .HasColumnType("decimal(p,2)");

                    b.Property<string>("JobOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeSource", (string)null);
                });

            modelBuilder.Entity("Budget.DB.PurchaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(p,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FutureReimbursement")
                        .HasColumnType("bit");

                    b.Property<int?>("GiftCardId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Purchases", (string)null);
                });

            modelBuilder.Entity("Budget.DB.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSystemAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("UserSSOLoginId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Budget.DB.UsersBudgetingGroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BudgetingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsGroupAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetingGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersBudgetingGroup", (string)null);
                });

            modelBuilder.Entity("Budget.DB.BudgetEntity", b =>
                {
                    b.HasOne("Budget.DB.BudgetTypeEntity", "BudgetType")
                        .WithMany("Budgets")
                        .HasForeignKey("BudgetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Budget.DB.BudgetingGroupEntity", "BudgetingGroup")
                        .WithMany()
                        .HasForeignKey("BudgetingGroupId");

                    b.Navigation("BudgetType");

                    b.Navigation("BudgetingGroup");
                });

            modelBuilder.Entity("Budget.DB.IncomeEntity", b =>
                {
                    b.HasOne("Budget.DB.IncomeSourceEntity", "IncomeSource")
                        .WithMany("Incomes")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeSource");
                });

            modelBuilder.Entity("Budget.DB.UsersBudgetingGroupEntity", b =>
                {
                    b.HasOne("Budget.DB.BudgetingGroupEntity", "BudgetingGroup")
                        .WithMany()
                        .HasForeignKey("BudgetingGroupId");

                    b.HasOne("Budget.DB.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetingGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Budget.DB.BudgetTypeEntity", b =>
                {
                    b.Navigation("Budgets");
                });

            modelBuilder.Entity("Budget.DB.IncomeSourceEntity", b =>
                {
                    b.Navigation("Incomes");
                });
#pragma warning restore 612, 618
        }
    }
}
